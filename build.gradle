plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Repositório do Fabric/Mojang (já incluído pelo Loom, mas bom ter por clareza)
	maven { url 'https://maven.fabricmc.net/' }
	// Repositório do Modrinth (forma moderna de obter muitas bibliotecas como Cloth Config e ModMenu)
	maven { url 'https://api.modrinth.com/maven' }
	// Repositório central do Maven, para outras dependências
	mavenCentral()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"barium" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// Versões do Minecraft e do Yarn são lidas do gradle.properties
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mod Menu (obtido via Modrinth)
	modImplementation "maven.modrinth:modmenu:${project.modmenu_version}"

	// Cloth Config (obtido via Modrinth)
	modImplementation "maven.modrinth:cloth-config:${project.cloth_config_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {
		// Repositórios para publicação viriam aqui
	}
}